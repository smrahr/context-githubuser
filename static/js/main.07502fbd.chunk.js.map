{"version":3,"sources":["components/Navbar.js","components/spinner.gif","components/Spinner.js","components/users/UserItem.js","context/github/githubContext.js","components/users/Users.js","components/users/Search.js","components/Alert.js","components/pages/About.js","components/repos/Repo.js","components/repos/Repos.js","components/users/User.js","context/Types.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","index.js"],"names":["Navbar","title","icon","className","to","defaultProps","Spinner","props","src","spinner","alt","style","width","margin","display","userItemStyle","UserItem","user","login","avatar_url","html_url","githubContext","createContext","usersStyle","flexWrap","justifyContent","Users","useContext","GithubContext","loading","users","map","id","Search","clearUsers","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUser","type","name","placeholder","value","onChange","target","autoComplete","length","onClick","Alert","alert","msg","About","Repo","repo","href","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","location","bio","followers","following","hireable","public_gists","public_repos","company","blog","SEARCH_USERS","GET_USERS","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","REMOVE_ALERT","state","action","payload","GithubState","useReducer","githubReducer","dispatch","setLoading","a","axios","get","process","response","data","items","username","REACT_APP_GITHUB_CLIENT_SECRET","Provider","setTimeout","children","App","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07502fbd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = ({title , icon}) =>{\r\n\r\n    // const {title , icon} = props;\r\n\r\n\r\n    //in classbase component\r\n    // static defaultProps = {\r\n    //     title : 'Github Search' ,\r\n    //     icon : 'fa fa-github mr-05'\r\n    // }\r\n    //in classbase component\r\n    // static propTypes ={\r\n    //     title : PropTypes.string.isRequired,\r\n    //     icon : PropTypes.string.isRequired\r\n    // }\r\n\r\n    \r\n        return (\r\n            <div className='navbar bg-primary'>\r\n                {/* <h1>\r\n                    <i className={props.icon}></i>\r\n                    {props.title}\r\n                </h1> */}\r\n                <h1>\r\n                    <i className={icon}></i>\r\n                    {title}\r\n                </h1>\r\n                <ul>\r\n                    <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Github Search' ,\r\n    icon : 'fa fa-github mr-05'\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title : PropTypes.string.isRequired,\r\n    icon : PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = (props) => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt=\"loading...\"\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserItem = ({user:{login , html_url , avatar_url} })=> {\r\n    \r\n        // const {login , html_url , avatar_url}=props.user;\r\n        return (\r\n            <div className='card text-center' style={userItemStyle}>\r\n                <img \r\n                    className='round-img'\r\n                    src={avatar_url}\r\n                    alt=''\r\n                    style={{width:50}}\r\n                />\r\n                <h3>{login}</h3>\r\n                <div className='my-1'>\r\n                    <Link to={`/user/${login}`} className='btn btn-dark btn-sm'>More</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst userItemStyle = {\r\n    width : '33%'\r\n}\r\nexport default UserItem\r\n","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import React , {createContext, useContext} from 'react'\r\nimport  Spinner  from '../Spinner'\r\nimport UserItem from './UserItem'\r\nimport GithubContext from '../../context/github/githubContext'\r\n\r\nconst Users = (props) => {\r\n    const githubContext = useContext(GithubContext)\r\n    const {loading, users} = githubContext\r\n\r\n    if (loading) {\r\n        return <Spinner />;\r\n    }else{\r\n        return (\r\n            <div style={usersStyle}>\r\n                {\r\n                    users.map((user)=> <UserItem key={user.id} user={user} />)\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst usersStyle = {\r\n    display : 'flex',\r\n    flexWrap : 'wrap',\r\n    justifyContent : 'space-between'\r\n}\r\n\r\n\r\n\r\nexport default Users\r\n","import React, { useState , useContext } from 'react'\r\nimport GithubContext from '../../context/github/githubContext'\r\n\r\nconst Search = (props) => {\r\n\r\n    // state = {\r\n    //     text: '',\r\n    //   };\r\n    const githubContext = useContext(GithubContext)\r\n    const {clearUsers}= githubContext\r\n    const [text , setText] =useState('');\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text === '') {\r\n          githubContext.setAlert('Please enter something', 'light');\r\n        } else {\r\n          githubContext.searchUser(text);\r\n          setText('');\r\n        }\r\n      };\r\n\r\n    // const handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    const handleChange = (e) => setText(e.target.value);\r\n    // const {showClear , clearUsers} = props;\r\n        return (\r\n            <div>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                    <input type='text' name='text' placeholder='Search Users...' value={text} onChange={handleChange} autoComplete='off' />\r\n                    {/* <input type=\"text\" name=\"text\" placeholder=\"Search Users...\" value={this.state.text} onChange={this.onChangeHandler} autoComplete=\"off\" /> */}\r\n                    <input type='submit' className='btn btn-block btn-dark'/>\r\n                </form>\r\n                {githubContext.users.length > 0 && <button className='btn btn-block btn-light' onClick={clearUsers}>clear</button>}                \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Search\r\n","import React , {useContext} from 'react'\r\nimport GithubContext from '../context/github/githubContext'\r\n\r\nconst Alert = () => {\r\n    const githubContext = useContext(GithubContext)\r\n    const {alert} = githubContext;\r\n    if (alert) {\r\n        return (\r\n            <div className={`alert alert-${alert.type}`}>\r\n                <i className={`fa fa-exclamation-circle`}></i>\r\n                {alert.msg}\r\n            </div>\r\n        )\r\n    }else{\r\n        return ''\r\n    }\r\n    \r\n}\r\n\r\nexport default Alert;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About Page</h1>\r\n      <p>This app is github search</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\n const Repo = ({repo}) => {\r\n    return (\r\n        <h4 className='card'>\r\n            <a href={repo.html_url}>{repo.name}</a>\r\n        </h4>\r\n    )\r\n}\r\nexport default Repo;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Repo from './Repo';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map((repo) => <Repo repo={repo} key={repo.id} />);\r\n};\r\nexport default Repos;\r\n","import React, { useEffect , Fragment, useContext } from 'react';\r\nimport  Spinner  from '../Spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext'\r\n\r\n\r\nconst User = ({match})=> {\r\n\r\n    const githubContext = useContext(GithubContext)\r\n    const {getUser, loading, user, repos, getUserRepos } = githubContext\r\n\r\n    useEffect(()=>{\r\n        getUser(match.params.login);\r\n        getUserRepos(match.params.login);\r\n        // eslint-disable-next-line\r\n        }\r\n    ,[])\r\n    \r\n    \r\n        const {name, avatar_url, location , bio, followers, following, hireable, html_url, login, public_gists, public_repos, company , blog} = user;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Link to='/' className='btn btn-light'>Back to Search</Link>\r\n                <span>\r\n                    hireable : {hireable ? <i className='fa fa-check text-success'></i> : <i className='fa fa-times text-danger'></i>}\r\n                </span>\r\n                <div className='card grid-2'>\r\n                    <div className='all-center'>\r\n                        <img src={avatar_url} alt={name} className='round-img' style={{width: '150px'}}/>\r\n                        <span>{name}</span>\r\n                        <span>{location}</span>\r\n                    </div>\r\n                    <div>\r\n                        {bio && (<Fragment>\r\n                            <h3>bio:</h3>\r\n                            <p>{bio}</p>\r\n                            <a className='btn btn-dark my-1' href={html_url}>visit github page</a>\r\n                            <ul>\r\n                                {login && (\r\n                                <li>\r\n                                    <span>login: {login}</span>\r\n                                </li>\r\n                                )}\r\n                                 {company && (\r\n                                <li>\r\n                                    <span>company: {company}</span>\r\n                                </li>\r\n                                )}\r\n                                {blog && (\r\n                                <li>\r\n                                    <span>website: {blog}</span>\r\n                                </li>\r\n                                )}\r\n                                \r\n                            </ul>\r\n                        </Fragment>)}\r\n                    </div>\r\n                </div>\r\n                <div className='card text-center'>\r\n                    <div className='badge badge-primary'>Followers:{followers}</div>\r\n                    <div className='badge badge-light'>Following:{following}</div>\r\n                    <div className='badge badge-success'>Public repos:{public_repos}</div>\r\n                    <div className='badge badge-dark'>Public gists:{public_gists}</div>\r\n\r\n                </div>\r\n                <Repos repos={repos} />\r\n            </Fragment>\r\n        )\r\n    \r\n}\r\n\r\nexport default User;\r\n","export const SEARCH_USERS= 'SEARCH_USERS';\r\nexport const GET_USERS= 'GET_USERS';\r\nexport const CLEAR_USERS= 'CLEAR_USERS';\r\nexport const GET_REPOS= 'GET_REPOS';\r\nexport const SET_LOADING= 'SET_LOADING';\r\nexport const SET_ALERT= 'SET_ALERT';\r\nexport const REMOVE_ALERT= 'REMOVE_ALERT';","import {SEARCH_USERS, GET_USERS, CLEAR_USERS, GET_REPOS, SET_LOADING, SET_ALERT, REMOVE_ALERT} from '../Types';\r\n\r\nexport default (state, action)=>{\r\n    switch(action.type){\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n            };\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading : false,\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading : false,\r\n            }\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading : false,\r\n            }\r\n        case GET_REPOS:\r\n        return {\r\n            ...state,\r\n            repos: action.payload,\r\n            loading : false,\r\n        }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.payload,\r\n        }  \r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: null,\r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport githubReducer from './githubReducer'\r\nimport githubContext from './githubContext';\r\nimport {SEARCH_USERS, GET_USERS, CLEAR_USERS, GET_REPOS, SET_LOADING, SET_ALERT, REMOVE_ALERT} from '../Types';\r\n\r\nconst GithubState = props =>{\r\n    const initialState={\r\n        users :[],\r\n        user :{},\r\n        repos :[],\r\n        loading :false,\r\n        alert: null\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState);\r\n    const setLoading = ()=>dispatch({type:SET_LOADING})\r\n\r\n    const searchUser = async(text) => {\r\n        setLoading();\r\n        const response = await axios.get(`https://api.github.com/search/users?q=${text}&client-id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_sECRET}`)\r\n        dispatch({type:SEARCH_USERS , payload: response.data.items})\r\n      }\r\n\r\n    const clearUsers = (e) => dispatch({type: CLEAR_USERS})\r\n\r\n\r\n    const getUser = async(username) => {\r\n        setLoading();\r\n        const response = await axios.get(`https://api.github.com/users/${username}?client-id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_sECRET}`)\r\n        dispatch({type:GET_USERS , payload: response.data})\r\n    }\r\n\r\n\r\n    const getUserRepos = async (username) => {\r\n        setLoading();\r\n        const response = await axios.get(\r\n        `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n        );\r\n        dispatch({type:GET_REPOS , payload: response.data} )    \r\n    };\r\n\r\n\r\n    const setAlert = (msg , type) => {\r\n        dispatch({type: SET_ALERT, payload:{msg , type}})\r\n        setTimeout(()=>dispatch({type:REMOVE_ALERT}) , 4000)\r\n      }\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <githubContext.Provider\r\n        value={\r\n            {\r\n                users : state.users,\r\n                user : state.user,\r\n                repos :state.repos,\r\n                loading :state.loading,\r\n                alert : state.alert,\r\n                searchUser,\r\n                clearUsers,\r\n                getUser,\r\n                getUserRepos,\r\n                setAlert\r\n            }\r\n        }>\r\n            {props.children}\r\n        </githubContext.Provider>\r\n    )\r\n\r\n}\r\nexport default GithubState;","import React, {Fragment} from 'react'\nimport Navbar from './components/Navbar'\nimport Users from './components/users/Users'\nimport Search from './components/users/Search'\nimport Alert  from './components/Alert'\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom';\nimport About from './components/pages/About'\nimport User from './components/users/User'\nimport GithubState from './context/github/GithubState'\n\nconst App = ()=> {\n    return (\n     <GithubState>\n        <Router>\n        <div className=\"App\">\n        <Navbar />\n        {<Alert/>}\n        <div className=\"container\">\n        <Switch>\n            <Route exact path=\"/\" render={(props)=> (\n              <Fragment >\n                <Search/>\n                <Users/>\n              </Fragment>\n              )} \n            />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/user/:login\" component={User}/>\n        </Switch>\n        </div></div>\n        </Router>\n     </GithubState>\n    );  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}